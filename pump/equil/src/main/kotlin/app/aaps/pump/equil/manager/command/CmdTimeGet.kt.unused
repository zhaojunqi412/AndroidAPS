package app.aaps.pump.equil.manager.command

import app.aaps.core.interfaces.logging.AAPSLogger
import app.aaps.core.interfaces.sharedPreferences.SP
import app.aaps.pump.equil.database.EquilHistoryRecord
import app.aaps.pump.equil.manager.EquilManager
import app.aaps.pump.equil.manager.Utils

class CmdTimeGet(
    aapsLogger: AAPSLogger,
    sp: SP,
    equilManager: EquilManager
) : BaseSetting(System.currentTimeMillis(), aapsLogger, sp, equilManager) {

    init {
        port = "0505"
    }

    override fun getFirstData(): ByteArray {
        val indexByte = Utils.intToBytes(pumpReqIndex)
        val data2 = byteArrayOf(0x02, 0x00)
        val data = Utils.concat(indexByte, data2)
        pumpReqIndex++
        return data
    }

    override fun getNextData(): ByteArray {
        val indexByte = Utils.intToBytes(pumpReqIndex)
        val data2 = byteArrayOf(0x00, 0x00, 0x01)
        val data = Utils.concat(indexByte, data2)
        pumpReqIndex++
        return data
    }

    override fun decodeConfirmData(data: ByteArray) {
//        67631679050017070e101319
//         val index = data[4].toInt()
//         val year = data[6].toInt() and 0xff
//         val month = data[7].toInt() and 0xff
//         val day = data[8].toInt() and 0xff
//         val hour = data[9].toInt() and 0xff
//         val min = data[10].toInt() and 0xff
//         val s = data[11].toInt() and 0xff
    }

    override fun getEventType(): EquilHistoryRecord.EventType? = null
}
